

　　该函数接受四个参数，这些参数都是系统调用WinMain函数时，传递给应用程序的。

　　第一个参数hInstance表示该程序的当前运行的实例句柄。同一应用程序在同一计算机上可运行多份实例，每启动一个这样的实例，操作系统都要给该实例分配一个标识号，即实例句柄，随后系统调用程序中的WinMain函数，并将该实例句柄传递给参数hInstance。

　　第二个参数hPrevInstance表示当前实例的上一个正在运行的，由同一个应用程序所产生的实例的句柄，即当前实例的"哥哥"的句柄。如果该值为NULL，则表示当前实例是该程序正在运行的第一份实例，是“长子”，是“老大”。如果该值不为NULL，只能表示当前实例不是该程序正在运行的第一份实例，不是“长子”，不是“老大”，但到底是“老几”，就无从得知了。这个参数到底有什么作用呢？如果想让我们的程序只能有一份实例运行，不能同时有多份实例运行，我们可以在WinMain函数的开始部分加上如下代码实现。

if(hPrevInstance) return 0;  // :: -> if(hPrevInstance!=NULL)

　　我们再来看看if(hPrevInstance) return 0;的作用，如果hPrevInstance为NULL（即0），说明当前运行的实例是程序的第一个实例，WinMain函数将不返回，程序正常向下运行。只要hPrevInstance不为NULL，说明已经有同样程序的实例在运行，WinMain函数将返回，当前实例启动后立马结束，这样就保证了只有程序的一个实例可以运行。

　　第三个参数lpCmdLine是一个字符串，里面包含有传递给应用程序的参数串，如：双击C盘下的1.txt文件方式启动notepad.exe程序，传递给notepad.exe程序的参数串即"c:\1.txt"，不包含应用程序名本身。要在VC开发环境中给应用程序传递参数，请选择菜单Project->Settings...,在弹出的Project Settings对话框中选择Debug标签，在该标签页的Program arguments编辑框中输入你想传递给应用程序的参数。我们在WinMain函数的入口点设置一运行断点，以调试方式启动程序运行至该断点处，将鼠标移动到参数lpCmdLine上，在弹出的黄色小浮框中便能观察到该变量的值。在我们的程序调试中，经常要用到这种方法查看变量的值和状态。

　　第四个参数nCmdShow指定的程序的窗口应该如何显示，如最大化，最小化，隐藏等。

　　WinMain函数前的修饰